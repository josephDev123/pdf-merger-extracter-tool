name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create .env File for Docker
        run: |
          echo "Creating .env file inside api/ directory..."
          mkdir -p api  # Ensure the api directory exists
          echo "PORT=${{ secrets.PORT }}" >> api/.env
          echo "CLOUDFRONT_URL=${{ secrets.CLOUDFRONT_URL }}" >> api/.env
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> api/.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> api/.env
          echo "Generated .env file:"
          cat api/.env  # Print for debugging

      - name: Create Target Directory on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo mkdir -p /var/www/myApps
            sudo chown $USER:$USER /var/www/myApps

      - name: Copy Entire Repository to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "." # Copy everything in the repository
          target: "/var/www/myApps" # Destination folder on EC2
          #recursive: true  # Ensure all subdirectories are copied
          #rm: true # Remove existing files before copying
          overwrite: true # Replace existing files

      - name: Create the dist folder
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /var/www/myApps/api
            npm run build

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /var/www/myApps

            docker-compose down || true
            docker-compose up -d --force-recreate
